version: '3'

services:
    sentry:
        image: sentry:latest
        env_file:
            - ./app/secret.env
            - ./postgres/secret.env
        environment:
            - SENTRY_REDIS_HOST=redis
            - SENTRY_POSTGRES_HOST=postgres
        networks:
            - sentry_network
        ports:
            - 0.0.0.0:9991:9000
        depends_on:
            - redis
            - postgres
        restart: unless-stopped

    sentry-cron:
        image: sentry:latest
        env_file:
            - ./app/secret.env
            - ./postgres/secret.env
        environment:
            - SENTRY_REDIS_HOST=redis
            - SENTRY_POSTGRES_HOST=postgres
        networks:
            - sentry_network
        depends_on:
            - redis
            - postgres
        command: ["run", "cron"]
        restart: unless-stopped

    sentry-worker:
        image: sentry:latest
        env_file:
            - ./app/secret.env
            - ./postgres/secret.env
        environment:
            - SENTRY_REDIS_HOST=redis
            - SENTRY_POSTGRES_HOST=postgres
        networks:
            - sentry_network
        depends_on:
            - redis
            - postgres
        command: ["run", "worker"]
        restart: unless-stopped

    redis:
        image: redis:4.0.11-alpine3.8
        networks:
            - sentry_network
        volumes:
            - sentry_redis_vol:/data
        restart: unless-stopped

    postgres:
        image: postgres:latest
        env_file:
            - ./postgres/secret.env
        networks:
            - sentry_network
        volumes:
            - sentry_postgres_vol:/var/lib/postgresql/data
        restart: unless-stopped

volumes:
    sentry_postgres_vol:
    sentry_redis_vol:

networks:
    sentry_network:
    