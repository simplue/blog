version: '3'

services:
    nginx:
        image: nginx:stable-alpine
        volumes:
            - ./app/static:/ngx-static:ro
            - ./nginx/app.conf:/etc/nginx/conf.d/app.conf:ro
        networks:
            - demo_network
        ports:
            - 0.0.0.0:9981:80
        restart: unless-stopped

    app:
        build: ./app
        env_file:
            - ./mysql/secret.env
        environment:
            - MYSQL_HOST=mysql
            - MYSQL_PORT=3306
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
            - REDIS_HOST=redis
            - REDIS_PORT=6379
        networks:
            - demo_network
        depends_on:
            - nginx
            - mysql
            - mongo
            - redis
        volumes:
            - ./app:/app:ro
        working_dir: /app
        command: ["./wait-for-it", "mysql:3306", "--", "./wait-for-it", "mongo:27017", "--", "./wait-for-it", "redis:6379", "--", "python2", "app.py"]

    mysql:
        image: mysql:5.7
        env_file:
            - ./mysql/secret.env
        command:
            --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        volumes:
            - mysql_vol:/var/lib/mysql
        networks:
            demo_network:
                aliases:
                    - db
        restart: unless-stopped

    adminer:
        image: adminer:4.7.0-standalone
        env_file:
            - ./mysql/secret.env
        networks:
            - demo_network
        depends_on:
            - nginx
            - mysql
        restart: unless-stopped

    # php-my-admin:
    #   image: phpmyadmin/phpmyadmin:latest
    #   env_file:
    #       - ./mysql/secret.env
    #   volumes:
    #       - mysql_vol:/var/lib/mysql
    #   networks:
    #       demo_network:
    #           aliases:
    #               - db
    #   depends_on:
    #       - mysql
    #   restart: unless-stopped

    mongo:
        image: mongo:3.6-stretch
        env_file:
            - ./mysql/secret.env
        volumes:
            - mongo_vol:/data/db
        networks:
            - demo_network
        command: ["mongod", "--smallfiles"]
        restart: unless-stopped
   
    mongo-express:
        image: mongo-express:0.49
        env_file:
            - ./mongo/secret.env
        networks:
            - demo_network
        depends_on:
            - nginx
            - mongo
        restart: unless-stopped
   
    redis:
        image: redis:4.0.11-alpine3.8
        volumes:
            - redis_vol:/data
        networks:
            - demo_network
        restart: unless-stopped
   
    redis-admin:
        image: erikdubbelboer/phpredisadmin:v1.11.0
        env_file:
            - ./redis/secret.env
        environment:
            - REDIS_1_HOST=redis
            - REDIS_1_PORT=6379
        networks:
            - demo_network
        depends_on:
            - nginx
            - redis
        restart: unless-stopped

volumes:
    mysql_vol:
    mongo_vol:
    redis_vol:

networks:
    demo_network:
    